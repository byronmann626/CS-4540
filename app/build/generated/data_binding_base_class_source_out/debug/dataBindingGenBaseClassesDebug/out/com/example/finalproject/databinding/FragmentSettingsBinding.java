// Generated by data binding compiler. Do not edit!
package com.example.finalproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.finalproject.R;
import com.example.finalproject.SettingsFragment;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentSettingsBinding extends ViewDataBinding {
  @NonNull
  public final Button cancelButton;

  @NonNull
  public final ChipGroup chipGroup;

  @NonNull
  public final Chip friday;

  @NonNull
  public final Chip monday;

  @NonNull
  public final Button okButton;

  @NonNull
  public final Chip saturday;

  @NonNull
  public final Chip sunday;

  @NonNull
  public final Chip thursday;

  @NonNull
  public final TimePicker timePicker1;

  @NonNull
  public final Chip tuesday;

  @NonNull
  public final Chip wednesday;

  @Bindable
  protected SettingsFragment mSettings;

  protected FragmentSettingsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button cancelButton, ChipGroup chipGroup, Chip friday, Chip monday, Button okButton,
      Chip saturday, Chip sunday, Chip thursday, TimePicker timePicker1, Chip tuesday,
      Chip wednesday) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cancelButton = cancelButton;
    this.chipGroup = chipGroup;
    this.friday = friday;
    this.monday = monday;
    this.okButton = okButton;
    this.saturday = saturday;
    this.sunday = sunday;
    this.thursday = thursday;
    this.timePicker1 = timePicker1;
    this.tuesday = tuesday;
    this.wednesday = wednesday;
  }

  public abstract void setSettings(@Nullable SettingsFragment Settings);

  @Nullable
  public SettingsFragment getSettings() {
    return mSettings;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_settings, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentSettingsBinding>inflateInternal(inflater, R.layout.fragment_settings, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_settings, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentSettingsBinding>inflateInternal(inflater, R.layout.fragment_settings, null, false, component);
  }

  public static FragmentSettingsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentSettingsBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentSettingsBinding)bind(component, view, R.layout.fragment_settings);
  }
}
